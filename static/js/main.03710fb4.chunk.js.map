{"version":3,"sources":["lib/SpringCalendar/CalendarContext.js","lib/SpringCalendar/Days.js","lib/SpringCalendar/Month.js","lib/SpringCalendar/useCalendar.js","lib/SpringCalendar/Months.js","lib/SpringCalendar/Day.js","lib/SpringCalendar/buttons.js","lib/index.js","lib/SpringCalendar/index.js","module/index.js","index.js"],"names":["CalendarContext","React","createContext","CalendarProvider","Provider","Consumer","Days","month","selectDay","useContext","useState","indexDayToShowEvents","setIndexDayToShowEvents","weekday","className","style","gridColumnStart","days","map","day","dayIndex","key","index","onClick","event","window","target","extended","isToday","events","length","e","i","title","localeFormat","startTime","endTime","Month","selectMonth","label","weekdaysShort","j","useCalendar","thisYear","locale","moment","type","value","Date","getFullYear","default","selectedDate","setSelectedDate","useEffect","console","log","changeView","generateMonths","_year","months","getMonth","generateMonth","_date","year","fullLabel","date","Array","daysInMonth","_","getDay","format","hours","getHours","getEvents","isSame","filter","startDate","endDate","x","k","isDefault","toggle","toString","gotoNext","next","add","gotoPrev","prev","subtract","Months","Fragment","Day","hour","gridRow","NextButton","fill","y","width","height","viewBox","id","points","PrevButton","transform","SpringCalendar","color","mainContent","setMainContent","document","documentElement","setProperty","DYNAMIC_CONTENT","App","Math","random","toFixed","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.03710fb4.chunk.js","sourcesContent":["import React from 'react';\n\nconst CalendarContext=React.createContext({});\n\nexport const CalendarProvider=CalendarContext.Provider\nexport const CalendarConsumer=CalendarContext.Consumer\nexport default CalendarContext;","import React, { useContext } from 'react';\r\nimport CalendarContext from './CalendarContext';\r\nimport { useState } from 'react';\r\nconst Days = ({ month }) => {\r\n\tconst { selectDay } = useContext(CalendarContext);\r\n\tconst [indexDayToShowEvents, setIndexDayToShowEvents] = useState(-1);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{month.weekday > 0 && (\r\n\t\t\t\t<div className=\"sc-day sc-day-in-month\" style={{ gridColumnStart: `span ${month.weekday}` }} />\r\n\t\t\t)}\r\n\t\t\t{month.days.map((day, dayIndex) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tkey={day.index}\r\n\t\t\t\t\t\tonClick={event => {\r\n\t\t\t\t\t\t\twindow.target = event.target;\r\n\r\n\t\t\t\t\t\t\tif (month.extended) {\r\n\t\t\t\t\t\t\t\tdayIndex === indexDayToShowEvents\r\n\t\t\t\t\t\t\t\t\t? setIndexDayToShowEvents(-1)\r\n\t\t\t\t\t\t\t\t\t: setIndexDayToShowEvents(dayIndex);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tselectDay(day);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={`${day.isToday ? 'sc-today  spring-centered-content' : ''} sc-day sc-day-in-month`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div>{day.index}</div>\r\n\t\t\t\t\t\t{day.events.length > 0 && (\r\n\t\t\t\t\t\t\t<sup>\r\n\t\t\t\t\t\t\t\t<div className=\"sc-day-events-count\">{day.events.length}</div>\r\n\t\t\t\t\t\t\t</sup>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{month.extended && day.events.length > 0 && (\r\n\t\t\t\t\t\t\t<div className=\"sc-day-events \">\r\n\t\t\t\t\t\t\t\t{day.events.map(\r\n\t\t\t\t\t\t\t\t\t(e, i) =>\r\n\t\t\t\t\t\t\t\t\t\ti < 3 && (\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"sc-event\" key={i}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{e.title}\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{day.events.length > 3 && (\r\n\t\t\t\t\t\t\t\t\t<span className=\"sc-event-more-indicator\">+{day.events.length - 3}</span>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t{indexDayToShowEvents === dayIndex && day.events.length > 0 && (\r\n\t\t\t\t\t\t\t\t\t<div className=\"sc-more-events-wrp\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"sc-more-events\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"sc-events-detail\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"sc-events-detail-day\">{day.localeFormat}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{day.events.map((e, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"sc-event-detail\" key={i}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"sc-event-detail-time\" key={i}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>{e.startTime}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>{e.endTime}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"sc-event-detail-title\">{e.title}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Days;\r\n","import React,{ useContext } from 'react';\r\nimport Days from './Days';\r\nimport CalendarContext from './CalendarContext';\r\n\r\n\r\nconst Month = ({ extended,month }) => {\r\n    const {selectMonth}=useContext(CalendarContext)\r\n\r\n\treturn (\r\n\t\t<div className={`${extended?'sc-month-wrapper-extended':'' } sc-month-wrapper`}>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"sc-month spring-centered-content\"\r\n\t\t\t\tonClick={()=>selectMonth(month)}\r\n\t\t\t>\r\n\t\t\t\t{month && month.label}\r\n\t\t\t</div>\r\n\t\t\t{month.weekdaysShort.map((weekday, j) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"sc-weekday spring-centered-content\" key={`wd${j}`}>\r\n\t\t\t\t\t\t{weekday}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t\t{month && <Days month={{...month,extended}} />}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Month;\r\n","import moment from 'moment/min/moment-with-locales';\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\n/****\r\n *\r\n *\r\n *\r\n */\r\n\r\nfunction useCalendar(thisYear,locale, events) {\r\n\twindow.moment = moment;\r\n\t/***\r\n\t * useState hooooook\r\n\t */\r\n\r\n\tconst [selectedDate, setSelectedDate] = useState({ type: 'year', value: new Date().getFullYear(), default: true });\r\n\r\n\t/***\r\n\t * useEffect hoook\r\n\t */\r\n\r\n\tuseEffect(() => {\r\n\t\tmoment.locale(locale);console.log(locale)\r\n\r\n\t\tchangeView('day');\r\n\t\t\r\n\t}, []);\r\n\r\n\t/****\r\n\t *\r\n\t * * functions\r\n\t */\r\n\r\n\t/**\r\n\t *\r\n\t * @param {*} _year is the year string name like '2020'\r\n\t */\r\n\tconst generateMonths = _year => {\r\n\t\treturn moment.months().map((label, i) => {\r\n\t\t\tlet index = i + 1;\r\n\r\n\t\t\treturn getMonth(_year, index, label);\r\n\t\t});\r\n\t};\r\n\t/** */\r\n\r\n\tconst generateMonth = _date => {\r\n\t\tlet index = _date.month() + 1;\r\n\t\tlet label = moment.months()[_date.month()];\r\n\t\tlet _year = _date.year();\r\n\r\n\t\treturn getMonth(_year, index, label);\r\n\t};\r\n\t/******* */\r\n\tconst getMonth = (_year, index, label) => {\r\n\t\tlet fullLabel = `${_year}-${index}`;\r\n\t\tlet date = moment(fullLabel);\r\n\r\n\t\tlet month = { label, fullLabel, index, weekday: date.weekday(), weekdaysShort: moment.weekdaysShort() };\r\n\r\n\t\tmonth.days = [...Array(date.daysInMonth())].map((_, dayIndex) => {\r\n\t\t\treturn getDay({\r\n\t\t\t\tindex: dayIndex + 1,\r\n\t\t\t\tlabel: `${_year}-${index}-${dayIndex + 1}`,\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn month;\r\n\t};\r\n\r\n\t/** */\r\n\tconst getDay = day => {\r\n\t\tday.localeFormat = moment(day.label).format('LL');\r\n\t\tday.hours = getHours();\r\n\t\tday.events = getEvents(day);\r\n\t\tday.isToday=moment().isSame(day.label, 'day');\r\n\t\treturn day;\r\n\t};\r\n\t/**\r\n\t *\r\n\t */\r\n\tconst getEvents = day => {\r\n\t\tlet evts = events.filter(event => {\r\n\t\t\treturn moment(event.startDate).isSame(day.label, 'day');\r\n\t\t});\r\n\r\n\t\treturn evts.map(event => {\r\n\t\t\tevent.startTime = moment(event.startDate).format('hh:mm A');\r\n\t\t\tevent.endTime = moment(event.endDate).format('hh:mm A');\r\n\t\t\treturn event;\r\n\t\t});\r\n\t};\r\n\t/**\r\n\t *\r\n\t */\r\n\tconst getHours = () =>\r\n\t\t[...Array(24)].map((x, k) => {\r\n\t\t\treturn {\r\n\t\t\t\tindex: k,\r\n\t\t\t\tlabel: `${k < 10 ? '0' + k : k}:00`,\r\n\t\t\t};\r\n\t\t});\r\n\t/**\r\n\t *\r\n\t * @param {string} type unit (year, month ...)\r\n\t * @param {date} value the date value\r\n\t * @param {boolean} isDefault the default value is the current date\r\n\t * @param {boolean} toggle the view is changed via a toggle button\r\n\t */\r\n\tconst changeView = (type, value, isDefault = true, toggle=false) => {\r\n\t\t/**\r\n\t\t * the following date value by default equals to the current\r\n\t\t *  year for example 2020-01-01\r\n\t\t *\r\n\t\t */\r\n\t\tlet date = isDefault ? moment() : moment(value);\r\n\t\t/**\r\n\t\t * the following condition checking is used when we toggle month or day\r\n\t\t *  button which should show the current month/day since the default\r\n\t\t * value refers to the year start\r\n\t\t */\r\n\r\n\r\n\t\tdate = toggle && !isDefault && !moment().isSame(moment(value), type) ? moment() : date;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase 'day':\r\n\t\t\t\tsetSelectedDate({\r\n\t\t\t\t\t...selectedDate,\r\n\t\t\t\t\ttype: 'day',\r\n\t\t\t\t\tvalue: date.format('LL'),\r\n\t\t\t\t\thours: getHours(),\r\n\t\t\t\t\tevents: getEvents({ label: date }),\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'week':\r\n\t\t\t\tsetSelectedDate({ ...selectedDate, type: 'week', value: date.format('MMMM YYYY') });\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'month':\r\n\t\t\t\tsetSelectedDate({\r\n\t\t\t\t\t...selectedDate,\r\n\t\t\t\t\ttype: 'month',\r\n\t\t\t\t\tvalue: date.format('MMMM YYYY'),\r\n\t\t\t\t\tmonth: generateMonth(date),\r\n\t\t\t\t});\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'year':\r\n\t\t\t\tsetSelectedDate({\r\n\t\t\t\t\t...selectedDate,\r\n\t\t\t\t\ttype: 'year',\r\n\t\t\t\t\tvalue: date.year().toString(),\r\n\t\t\t\t\tmonths: generateMonths(date.year()),\r\n\t\t\t\t});\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\tconst gotoNext = () => {\r\n\t\tlet next = moment(selectedDate.value).add(1, selectedDate.type + 's');\r\n\t\r\n\r\n\t\tchangeView(selectedDate.type, next, false);\r\n\t};\r\n\r\n\tconst gotoPrev = () => {\r\n\t\tlet prev = moment(selectedDate.value).subtract(1, selectedDate.type + 's');\r\n\t\tchangeView(selectedDate.type, prev, false);\r\n\t};\r\n\t/****\r\n\t *\r\n\t * return hoook methods\r\n\t */\r\n\treturn {  gotoNext, gotoPrev, selectedDate, changeView };\r\n}\r\n\r\nexport default useCalendar;\r\n","import React from 'react';\r\nimport Month from './Month';\r\nconst Months = ({months}) => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{months.map((month, i) => {\r\n\t\t\t\treturn <Month month={month}  key={`m${i}`} />;\r\n\t\t\t})}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default Months;\r\n","import React from 'react';\r\n\r\nconst Day = ({ day }) => {\r\n\tconsole.log(day);\r\n\treturn (\r\n\t\t<div className=\"sc-full-day\">\r\n\t\t\t{day.hours &&\r\n\t\t\t\tday.hours.map((hour, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<React.Fragment key={index}>\r\n\t\t\t\t\t\t\t<div className=\"sc-full-day-hour\">{hour.label}</div>\r\n\t\t\t\t\t\t\t<div className=\"sc-full-day-time-line-item\">\r\n\t\t\t\t\t\t\t\t<div className=\"sc-full-day-time-line-circle\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t{/** render events */}\r\n\t\t\t<div className=\"sc-full-day-events\">\r\n\t\t\t\t{day.events &&\r\n\t\t\t\t\tday.events.map((event, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tgridRow:\r\n\t\t\t\t\t\t\t\t\t\tnew Date(event.startDate).getHours() +\r\n\t\t\t\t\t\t\t\t\t\t1 +\r\n\t\t\t\t\t\t\t\t\t\t'/span ' +\r\n\t\t\t\t\t\t\t\t\t\t(new Date(event.endDate).getHours() - new Date(event.startDate).getHours() + 1),\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName=\"sc-full-day-event\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<div className=\"sc-full-day-event-time\">\r\n\t\t\t\t\t\t\t\t\t<div>{event.startTime}</div>\r\n\t\t\t\t\t\t\t\t\t<div>{event.endTime}</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"sc-full-day-event-title\">{event.title}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Day;\r\n","import React from 'react'\r\n\r\nexport const NextButton = ({ onClick }) => {\r\n\treturn (\r\n\t\t<button className=\"spring-btn spring-btn-rounded\" onClick={onClick}>\r\n\t\t\t<svg fill=\"white\" x=\"0px\" y=\"0px\" width=\"20px\" height=\"20px\" viewBox=\"0 0 306 306\">\r\n\t\t\t\t<g id=\"chevron-right\">\r\n\t\t\t\t\t<polygon points=\"94.35,0 58.65,35.7 175.95,153 58.65,270.3 94.35,306 247.35,153\" />\r\n\t\t\t\t</g>\r\n\t\t\t</svg>\r\n\t\t</button>\r\n\t);\r\n};\r\nexport const PrevButton = ({ onClick }) => {\r\n\treturn (\r\n\t\t<button className=\"spring-btn spring-btn-rounded\" onClick={onClick}>\r\n\t\t\t<svg\r\n\t\t\t\tx=\"0px\"\r\n\t\t\t\tfill=\"white\"\r\n\t\t\t\ty=\"0px\"\r\n\t\t\t\twidth=\"20px\"\r\n\t\t\t\theight=\"20px\"\r\n\t\t\t\tviewBox=\"0 0 306 306\"\r\n\t\t\t\tstyle={{ transform: 'rotate(180deg)' }}\r\n\t\t\t>\r\n\t\t\t\t<g id=\"chevron-right\">\r\n\t\t\t\t\t<polygon points=\"94.35,0 58.65,35.7 175.95,153 58.65,270.3 94.35,306 247.35,153\" />\r\n\t\t\t\t</g>\r\n\t\t\t</svg>\r\n\t\t</button>\r\n\t);\r\n};","import SpringCalendar from './SpringCalendar'\n\nexport default SpringCalendar;","import React, { useEffect, useState } from 'react';\r\nimport './style.scss';\r\nimport Month from './Month';\r\nimport useCalendar from './useCalendar';\r\nimport Months from './Months';\r\nimport Day from './Day'\r\nimport { CalendarProvider } from './CalendarContext';\r\n\r\nimport { NextButton, PrevButton } from './buttons';\r\nconst SpringCalendar = ({ locale, events, color }) => {\r\n\tconst {  selectedDate, changeView, gotoNext, gotoPrev } = useCalendar('2020',locale,events);\r\n\tconst [mainContent, setMainContent] = useState('day');\r\nuseEffect(() => {\r\n\tcolor?document.documentElement.style.setProperty(\"--primary\", color):document.documentElement.style.setProperty(\"--primary\", \"#5118ac\");\r\n\r\n}, [color])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetMainContent(selectedDate.type);\r\n\t}, [selectedDate]);\r\n\r\n\tconst DYNAMIC_CONTENT = {\r\n\t\tyear: (\r\n\t\t\t<Months\r\n\t\t\t\tmonths={selectedDate.months ? selectedDate.months : []}\r\n\t\t\t\r\n\t\t\t/>\r\n\t\t),\r\n\t\tmonth: (\r\n\t\t\t<Month\r\n\t\t\t\textended\r\n\t\t\t\tmonth={selectedDate.month ? selectedDate.month : null}\r\n\t\t\t\r\n\t\t\t/>\r\n\t\t),\r\n\t\tday:<Day day={selectedDate} />\r\n\t};\r\n/***\r\n * * functions\r\n */\r\n\tconst selectMonth=month => {\r\n\t\tchangeView('month', month.fullLabel, false);\r\n\t}\r\n\r\n\t/**** */\r\n\tconst selectDay=day => {\r\n\t\tchangeView('day', day.label, false);\r\n\t}\r\n\t/**\r\n\t * JSX template\r\n\t */\r\n\treturn (\r\n\t\t<CalendarProvider value={{ selectMonth,selectDay}}>\r\n\r\n\t\t<div className=\"sc-wrapper\">\r\n\t\t\t<div className=\"sc-year-wrapper\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={`sc-year ${\r\n\t\t\t\t\t\tselectedDate.type !== 'year' ? 'sc-month-year' : ''\r\n\t\t\t\t\t}`}\r\n\t\t\t\t>\r\n\t\t\t\t\t<PrevButton onClick={() => gotoPrev()} />\r\n\t\t\t\t\t<h2>{selectedDate.value}</h2>\r\n\t\t\t\t\t<NextButton onClick={() => gotoNext()} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"sc-toggle\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tonClick={() => changeView('day',selectedDate.value,false,true)}\r\n\t\t\t\t\t\tclassName={`spring-button ${selectedDate.type === 'day' ? 'spring-button-active' : ''}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tDay\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* <div\r\n\t\t\t\t\t\tonClick={() => changeView('week',selectedDate.value,false,true)}\r\n\t\t\t\t\t\tclassName={`spring-button ${selectedDate.type === 'week' ? 'spring-button-active' : ''}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tWeek\r\n\t\t\t\t\t</div> */}\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tonClick={() => changeView('month',selectedDate.value,false,true)}\r\n\t\t\t\t\t\tclassName={`spring-button ${selectedDate.type === 'month' ? 'spring-button-active' : ''}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tMonth\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tonClick={() => changeView('year',selectedDate.value,false,true)}\r\n\t\t\t\t\t\tclassName={`spring-button ${selectedDate.type === 'year' ? 'spring-button-active' : ''}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tYear\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"spring-main-content\">{DYNAMIC_CONTENT[mainContent]}</div>\r\n\t\t</div>\r\n\t\t</CalendarProvider>\r\n\t);\r\n};\r\n\r\nexport default SpringCalendar;\r\n","import React from 'react';\r\nimport SpringCalendar from '../lib';\r\n\r\nlet events=[\r\n    {\r\n        title:'Event 1',\r\n        startDate:'2020-04-09 08:00',\r\n        endDate:'2020-04-09 12:00',\r\n    },\r\n    {\r\n        title:'Event 2',\r\n        startDate:'2020-04-09 09:00',\r\n        endDate:'2020-04-09 12:00',\r\n    },\r\n    {\r\n        title:'Event 3',\r\n        startDate:'2020-04-09 12:00',\r\n        endDate:'2020-04-09 16:00',\r\n    },\r\n    {\r\n        title:'Event 4',\r\n        startDate:'2020-04-09 09:00',\r\n        endDate:'2020-04-09 10:00',\r\n    },\r\n    {\r\n        title:'Event 5',\r\n        startDate:'2020-04-09 09:00',\r\n        endDate:'2020-04-09 14:00',\r\n    },\r\n    {\r\n        title:'Event 6',\r\n        startDate:'2020-04-09 08:00',\r\n        endDate:'2020-04-09 10:00',\r\n    },\r\n    {\r\n        title:'Event 7',\r\n        startDate:'2020-04-09 06:00',\r\n        endDate:'2020-04-09 10:00',\r\n    },\r\n    {\r\n        title:'Event 8',\r\n        startDate:'2020-04-09 18:00',\r\n        endDate:'2020-04-09 22:00',\r\n    },\r\n    {\r\n        title:'Event 9',\r\n        startDate:'2020-04-09 18:00',\r\n        endDate:'2020-04-09 22:00',\r\n    },\r\n    {\r\n        title:'Event 10',\r\n        startDate:'2020-04-09 19:00',\r\n        endDate:'2020-04-09 20:00',\r\n    }\r\n]\r\n\r\nlet color= (Math.random()*1000000).toFixed()\r\n// const App =()=> <SpringCalendar locale=\"ar-ma\" events={events} color={`#${color}`} />;\r\nconst App =()=> <SpringCalendar locale=\"en\" events={events} color=\"#3a0751\" />;\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './module';\nReactDOM.render( <App/>, document.getElementById('root') );"],"sourceRoot":""}