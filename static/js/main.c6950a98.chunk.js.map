{"version":3,"sources":["lib/SpringCalendar/CalendarContext.js","lib/SpringCalendar/Days.js","lib/SpringCalendar/Month.js","lib/SpringCalendar/useCalendar.js","lib/SpringCalendar/Months.js","lib/SpringCalendar/Day.js","lib/SpringCalendar/Week.js","lib/SpringCalendar/buttons.js","lib/index.js","lib/SpringCalendar/index.js","module/index.js","index.js"],"names":["CalendarContext","React","createContext","CalendarProvider","Provider","Consumer","Days","month","selectDay","useContext","useState","indexDayToShowEvents","setIndexDayToShowEvents","weekday","className","style","gridColumnStart","days","map","day","dayIndex","key","index","onClick","event","extended","isToday","events","length","e","i","title","localeFormat","startTime","endTime","Month","selectMonth","label","weekdaysShort","j","useCalendar","thisYear","locale","defaultType","window","moment","type","value","Date","getFullYear","default","selectedDate","setSelectedDate","weekdays","setWeekdays","setWeekdaysShort","useEffect","updateLocale","changeView","generateMonths","_year","months","getMonth","generateMonth","_date","year","generateWeek","dw","date","subtract","_month","_day","statOfWeek","getEvents","hours","getHours","fullLabel","Array","daysInMonth","_","getDay","format","isSame","filter","startDate","endDate","x","k","isDefault","toggle","week","toString","gotoNext","next","add","gotoPrev","prev","Months","Fragment","Day","hour","gridRow","Week","mappedEvents","setMappedEvents","setEvents","focusedEvent","setFocusedEvent","_events","wd","flat","sort","a","b","startHour","endHour","endMinutes","getMinutes","background","color","height","getEventsByHour","console","log","left","top","_mappedEvents","h","filteredEvents","push","item","focusOnEvent","NextButton","fill","y","width","viewBox","id","points","PrevButton","transform","SpringCalendar","colors","coloredEvents","Math","round","random","mainContent","setMainContent","document","documentElement","setProperty","DYNAMIC_CONTENT","App","toFixed","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c6950a98.chunk.js","sourcesContent":["import React from 'react';\n\nconst CalendarContext=React.createContext({});\n\nexport const CalendarProvider=CalendarContext.Provider\nexport const CalendarConsumer=CalendarContext.Consumer\nexport default CalendarContext;","import React, { useContext } from 'react';\r\nimport CalendarContext from './CalendarContext';\r\nimport { useState } from 'react';\r\nconst Days = ({ month }) => {\r\n\tconst { selectDay } = useContext(CalendarContext);\r\n\tconst [indexDayToShowEvents, setIndexDayToShowEvents] = useState(-1);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{month.weekday > 0 && (\r\n\t\t\t\t<div className=\"sc-day sc-day-in-month\" style={{ gridColumnStart: `span ${month.weekday}` }} />\r\n\t\t\t)}\r\n\t\t\t{month.days.map((day, dayIndex) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tkey={day.index}\r\n\t\t\t\t\t\tonClick={event => {\r\n\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\tif (month.extended) {\r\n\t\t\t\t\t\t\t\tdayIndex === indexDayToShowEvents\r\n\t\t\t\t\t\t\t\t\t? setIndexDayToShowEvents(-1)\r\n\t\t\t\t\t\t\t\t\t: setIndexDayToShowEvents(dayIndex);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tselectDay(day);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={`${day.isToday ? 'sc-today  spring-centered-content' : ''} sc-day sc-day-in-month`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div>{day.index}</div>\r\n\t\t\t\t\t\t{day.events.length > 0 && (\r\n\t\t\t\t\t\t\t<sup>\r\n\t\t\t\t\t\t\t\t<div className=\"sc-day-events-count\">{day.events.length}</div>\r\n\t\t\t\t\t\t\t</sup>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{month.extended && day.events.length > 0 && (\r\n\t\t\t\t\t\t\t<div className=\"sc-day-events \">\r\n\t\t\t\t\t\t\t\t{day.events.map(\r\n\t\t\t\t\t\t\t\t\t(e, i) =>\r\n\t\t\t\t\t\t\t\t\t\ti < 3 && (\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"sc-event\" key={i}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{e.title}\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{day.events.length > 3 && (\r\n\t\t\t\t\t\t\t\t\t<span className=\"sc-event-more-indicator\">+{day.events.length - 3}</span>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t{indexDayToShowEvents === dayIndex && day.events.length > 0 && (\r\n\t\t\t\t\t\t\t\t\t<div className=\"sc-more-events-wrp\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"sc-more-events\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"sc-events-detail\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"sc-events-detail-day\">{day.localeFormat}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{day.events.map((e, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"sc-event-detail\" key={i}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"sc-event-detail-time\" key={i}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>{e.startTime}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>{e.endTime}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"sc-event-detail-title\">{e.title}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Days;\r\n","import React,{ useContext } from 'react';\r\nimport Days from './Days';\r\nimport CalendarContext from './CalendarContext';\r\n\r\n\r\nconst Month = ({ extended,month }) => {\r\n    const {selectMonth}=useContext(CalendarContext)\r\n\r\n\treturn (\r\n\t\t<div className={`${extended?'sc-month-wrapper-extended':'' } sc-month-wrapper`}>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"sc-month spring-centered-content\"\r\n\t\t\t\tonClick={()=>selectMonth(month)}\r\n\t\t\t>\r\n\t\t\t\t{month && month.label}\r\n\t\t\t</div>\r\n\t\t\t{month.weekdaysShort.map((weekday, j) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"sc-weekday spring-centered-content\" key={`wd${j}`}>\r\n\t\t\t\t\t\t{weekday}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t\t{month && <Days month={{...month,extended}} />}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Month;\r\n","import moment from 'moment/min/moment-with-locales';\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\n/****\r\n *\r\n *\r\n *\r\n */\r\n\r\nfunction useCalendar(thisYear, locale, events, defaultType) {\r\n\twindow.moment = moment;\r\n\t/***\r\n\t * useState hooooook\r\n\t */\r\n\r\n\tconst [selectedDate, setSelectedDate] = useState({ type: 'year', value: new Date().getFullYear(), default: true });\r\n\tconst [weekdays, setWeekdays] = useState([]);\r\n\tconst [weekdaysShort, setWeekdaysShort] = useState([]);\r\n\t/***\r\n\t * useEffect hoook\r\n\t */\r\n\r\n\tuseEffect(() => {\r\n\t\tmoment.updateLocale(locale);\r\n\r\n\t\tsetWeekdays(moment.weekdays());\r\n\t\tsetWeekdaysShort(moment.weekdaysShort());\r\n\t\tchangeView(defaultType);\r\n\t}, []);\r\n\r\n\t/****\r\n\t *\r\n\t * * functions\r\n\t */\r\n\r\n\t/**\r\n\t *\r\n\t * @param {*} _year is the year string name like '2020'\r\n\t */\r\n\tconst generateMonths = _year => {\r\n\t\treturn moment.months().map((label, i) => {\r\n\t\t\tlet index = i + 1;\r\n\r\n\t\t\treturn getMonth(_year, index, label);\r\n\t\t});\r\n\t};\r\n\t/** */\r\n\r\n\tconst generateMonth = _date => {\r\n\t\tlet index = _date.month() + 1;\r\n\t\tlet label = moment.months()[_date.month()];\r\n\t\tlet _year = _date.year();\r\n\r\n\t\treturn getMonth(_year, index, label);\r\n\t};\r\n\t/********* */\r\n\tconst generateWeek = _date => {\r\n\t\twindow._date = _date;\r\n\r\n\t\tlet _week = {\r\n\t\t\tweekdays: moment.weekdays().map((dw, i) => {\r\n\t\t\t\tlet date = _date.subtract(_date.weekday() - i, 'day').date();\r\n\t\t\t\tlet _month = _date.month() + 1;\r\n\t\t\t\tlet _year = _date.year();\r\n\t\t\t\tlet _day = {\r\n\t\t\t\t\tindex: date,\r\n\t\t\t\t\tlabel: `${_year}-${_month}-${date}`,\r\n\t\t\t\t};\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tlabel: dw,\r\n\t\t\t\t\tdate,\r\n\t\t\t\t\tmonth: _month,\r\n\t\t\t\t\tyear: _year,\r\n\t\t\t\t\tstatOfWeek: _date.subtract(_date.weekday(), 'day'),\r\n\t\t\t\t\tevents: getEvents(_day),\r\n\t\t\t\t};\r\n\t\t\t}),\r\n\t\t\thours: getHours(),\r\n\t\t};\r\n\r\n\t\treturn _week;\r\n\t};\r\n\t/** */\r\n\t/******* */\r\n\tconst getMonth = (_year, index, label) => {\r\n\t\tlet fullLabel = `${_year}-${index}`;\r\n\t\tlet date = moment(fullLabel);\r\n\r\n\t\tlet month = { label, fullLabel, index, weekday: date.weekday(), weekdaysShort, weekdays };\r\n\r\n\t\tmonth.days = [...Array(date.daysInMonth())].map((_, dayIndex) => {\r\n\t\t\treturn getDay({\r\n\t\t\t\tindex: dayIndex + 1,\r\n\t\t\t\tlabel: `${_year}-${index}-${dayIndex + 1}`,\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn month;\r\n\t};\r\n\r\n\t/** */\r\n\tconst getDay = day => {\r\n\t\tday.localeFormat = moment(day.label).format('LL');\r\n\t\tday.hours = getHours();\r\n\t\tday.events = getEvents(day);\r\n\t\tday.isToday = moment().isSame(day.label, 'day');\r\n\t\treturn day;\r\n\t};\r\n\t/**\r\n\t *\r\n\t */\r\n\tconst getEvents = day => {\r\n\t\tlet evts = events.filter(event => {\r\n\t\t\treturn moment(event.startDate).isSame(day.label, 'day');\r\n\t\t});\r\n\r\n\t\treturn evts.map(event => {\r\n\t\t\tevent.startTime = moment(event.startDate).format('hh:mm A');\r\n\t\t\tevent.endTime = moment(event.endDate).format('hh:mm A');\r\n\t\t\tevent.weekday = moment(day.label).weekday();\r\n\t\t\treturn event;\r\n\t\t});\r\n\t};\r\n\t/**\r\n\t *\r\n\t */\r\n\tconst getHours = () =>\r\n\t\t[...Array(24)].map((x, k) => {\r\n\t\t\treturn {\r\n\t\t\t\tindex: k,\r\n\t\t\t\tlabel: `${k < 10 ? '0' + k : k}:00`,\r\n\t\t\t};\r\n\t\t});\r\n\t/**\r\n\t *\r\n\t * @param {string} type unit (year, month ...)\r\n\t * @param {date} value the date value\r\n\t * @param {boolean} isDefault the default value is the current date\r\n\t * @param {boolean} toggle the view is changed via a toggle button\r\n\t */\r\n\tconst changeView = (type, value, isDefault = true, toggle = false) => {\r\n\t\t/**\r\n\t\t * the following date value by default equals to the current\r\n\t\t *  year for example 2020-01-01\r\n\t\t *\r\n\t\t */\r\n\t\tlet date = isDefault ? moment() : moment(value);\r\n\t\t/**\r\n\t\t * the following condition checking is used when we toggle month or day\r\n\t\t *  button which should show the current month/day since the default\r\n\t\t * value refers to the year start\r\n\t\t */\r\n\r\n\t\tdate = toggle && !isDefault && !moment().isSame(moment(value), type) ? moment() : date;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase 'day':\r\n\t\t\t\tsetSelectedDate({\r\n\t\t\t\t\t...selectedDate,\r\n\t\t\t\t\ttype: 'day',\r\n\t\t\t\t\tvalue: date.format('LL'),\r\n\t\t\t\t\thours: getHours(),\r\n\t\t\t\t\tevents: getEvents({ label: date }),\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'week':\r\n\t\t\t\tsetSelectedDate({\r\n\t\t\t\t\t...selectedDate,\r\n\t\t\t\t\ttype: 'week',\r\n\t\t\t\t\tvalue: (date => {\r\n\t\t\t\t\t\tlet _date = date.subtract(date.weekday(), 'day');\r\n\t\t\t\t\t\treturn _date.format('LL');\r\n\t\t\t\t\t})(date), //we refer the week value to its start date\r\n\t\t\t\t\tweek: generateWeek(date),\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'month':\r\n\t\t\t\tsetSelectedDate({\r\n\t\t\t\t\t...selectedDate,\r\n\t\t\t\t\ttype: 'month',\r\n\t\t\t\t\tvalue: date.format('MMMM YYYY'),\r\n\t\t\t\t\tmonth: generateMonth(date),\r\n\t\t\t\t});\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'year':\r\n\t\t\t\tsetSelectedDate({\r\n\t\t\t\t\t...selectedDate,\r\n\t\t\t\t\ttype: 'year',\r\n\t\t\t\t\tvalue: date.year().toString(),\r\n\t\t\t\t\tmonths: generateMonths(date.year()),\r\n\t\t\t\t});\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\tconst gotoNext = () => {\r\n\t\tlet next = moment(selectedDate.value).add(1, selectedDate.type + 's');\r\n\r\n\t\tchangeView(selectedDate.type, next, false);\r\n\t};\r\n\r\n\tconst gotoPrev = () => {\r\n\t\tlet prev = moment(selectedDate.value).subtract(1, selectedDate.type + 's');\r\n\t\tchangeView(selectedDate.type, prev, false);\r\n\t};\r\n\t/****\r\n\t *\r\n\t * return hoook methods\r\n\t */\r\n\treturn { gotoNext, gotoPrev, selectedDate, changeView };\r\n}\r\n\r\nexport default useCalendar;\r\n","import React from 'react';\r\nimport Month from './Month';\r\nconst Months = ({months}) => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{months.map((month, i) => {\r\n\t\t\t\treturn <Month month={month}  key={`m${i}`} />;\r\n\t\t\t})}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default Months;\r\n","import React from 'react';\r\n\r\nconst Day = ({ day }) => {\r\n\t\r\n\treturn (\r\n\t\t<div className=\"sc-full-day\">\r\n\t\t\t{day.hours &&\r\n\t\t\t\tday.hours.map((hour, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<React.Fragment key={index}>\r\n\t\t\t\t\t\t\t<div className=\"sc-full-day-hour\">{hour.label}</div>\r\n\t\t\t\t\t\t\t<div className=\"sc-full-day-time-line-item\">\r\n\t\t\t\t\t\t\t\t<div className=\"sc-full-day-time-line-circle\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t{/** render events */}\r\n\t\t\t<div className=\"sc-full-day-events\">\r\n\t\t\t\t{day.events &&\r\n\t\t\t\t\tday.events.map((event, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tgridRow:\r\n\t\t\t\t\t\t\t\t\t\tnew Date(event.startDate).getHours() +\r\n\t\t\t\t\t\t\t\t\t\t1 +\r\n\t\t\t\t\t\t\t\t\t\t'/span ' +\r\n\t\t\t\t\t\t\t\t\t\t(new Date(event.endDate).getHours() - new Date(event.startDate).getHours() + 1),\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName=\"sc-full-day-event\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<div className=\"sc-full-day-event-time\">\r\n\t\t\t\t\t\t\t\t\t<div>{event.startTime}</div>\r\n\t\t\t\t\t\t\t\t\t<div>{event.endTime}</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"sc-full-day-event-title\">{event.title}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Day;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst Week = ({ week }) => {\r\n\tconst [mappedEvents, setMappedEvents] = useState([]);\r\n\tconst [events, setEvents] = useState([]);\r\n\r\n\tconst [focusedEvent, setFocusedEvent] = useState({});\r\n\r\n\tuseEffect(() => {\r\n\t\tlet _events = week.weekdays\r\n\t\t\t.map(wd => wd.events)\r\n\t\t\t.flat()\r\n\t\t\t.sort((a, b) => {\r\n\t\t\t\treturn new Date(a.startDate).getHours() - new Date(b.startDate).getHours();\r\n\t\t\t})\r\n\t\t\t.map((event, i) => {\r\n\t\t\t\tlet startHour = new Date(event.startDate).getHours();\r\n\t\t\t\tlet endHour = new Date(event.endDate).getHours();\r\n\t\t\t\tlet endMinutes = new Date(event.endDate).getMinutes();\r\n\r\n\t\t\t\tevent.style = {\r\n\t\t\t\t\t/*'grid-row': startHour + 1 + '/span ' + (endHour - startHour + 1),\r\n\r\n\t\t\t\t\t'grid-column': event.weekday + 1,*/\r\n\t\t\t\t\t// \"z-index\": startHour + 1,\r\n\t\t\t\t\tbackground: event.color,\r\n\t\t\t\t\theight: (endHour - startHour) * 32 + (32 * endMinutes) / 60 + 'px',\r\n\t\t\t\t};\r\n\r\n\t\t\t\treturn event;\r\n\t\t\t});\r\n\r\n\t\tsetEvents(_events);\r\n\t}, [week]);\r\n\r\n\tuseEffect(() => {\r\n\t\tfunction getEventsByHour(hour, day) {\r\n\t\t\tconsole.log('--------------------');\r\n\t\t\tconsole.log(events);\r\n\t\t\tconsole.log('--------------------');\r\n\t\t\tlet _events = events.filter(e => {\r\n\t\t\t\tlet startHour = new Date(e.startDate).getHours();\r\n\t\t\t\treturn startHour === hour && day === e.weekday;\r\n\t\t\t});\r\n\r\n\t\t\treturn _events.map((e, i) => {\r\n\t\t\t\te.style.left = (i / _events.length) * 90 + '%';\r\n\t\t\t\te.style.top = '0px';\r\n\t\t\t\treturn e;\r\n\t\t\t});\r\n\t\t}\r\n\t\tlet _mappedEvents = [];\r\n\r\n\t\tif (events.length > 0) {\r\n\t\t\tfor (let h = 1; h <= 24; h++) {\r\n\t\t\t\tfor (let j = 0; j < 7; j++) {\r\n\t\t\t\t\tlet filteredEvents = getEventsByHour(h, j);\r\n\r\n\t\t\t\t\t_mappedEvents.push(filteredEvents);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetMappedEvents(_mappedEvents);\r\n\t}, [events]);\r\n\r\n\tconst focusOnEvent = event => {\r\n\t\tsetFocusedEvent(event);\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"sc-week-wrapper\">\r\n\t\t\t<div className=\"sc-weekdays\">\r\n\t\t\t\t{week.weekdays.map((weekday, j) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className=\"sc-weekday\" key={'fwd' + j}>\r\n\t\t\t\t\t\t\t<div className=\"sc-weekday-label\">{weekday.label}</div>\r\n\t\t\t\t\t\t\t<div className=\"sc-weekday-date\">{weekday.date}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"sc-week-hours-wrap\">\r\n\t\t\t\t<div className=\"sc-week-hours\">\r\n\t\t\t\t\t{week.hours.map((hour, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div key={'wh' + index} className=\"sc-week-hour\">\r\n\t\t\t\t\t\t\t\t{hour.label}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"sc-week-events-wrap\">\r\n\t\t\t\t{mappedEvents.map((event, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={'we' + index} className=\"sc-week-events\">\r\n\t\t\t\t\t\t\t{event.map((item, i) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tkey={'evdd' + i + index}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ ...item.style }}\r\n\t\t\t\t\t\t\t\t\t\tclassName={`${\r\n\t\t\t\t\t\t\t\t\t\t\titem.title === focusedEvent.title ? 'sc-week-event-focused' : ''\r\n\t\t\t\t\t\t\t\t\t\t} sc-week-event`}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => focusOnEvent(item)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{item.title === focusedEvent.title ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"sc-week-event-time\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div>{item.startTime}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div>{item.endTime}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"sc-week-event-title\">{item.title}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"sc-week-event-title\">{item.title}</div>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Week;\r\n","import React from 'react'\r\n\r\nexport const NextButton = ({ onClick }) => {\r\n\treturn (\r\n\t\t<button className=\"spring-btn spring-btn-rounded\" onClick={onClick}>\r\n\t\t\t<svg fill=\"white\" x=\"0px\" y=\"0px\" width=\"20px\" height=\"20px\" viewBox=\"0 0 306 306\">\r\n\t\t\t\t<g id=\"chevron-right\">\r\n\t\t\t\t\t<polygon points=\"94.35,0 58.65,35.7 175.95,153 58.65,270.3 94.35,306 247.35,153\" />\r\n\t\t\t\t</g>\r\n\t\t\t</svg>\r\n\t\t</button>\r\n\t);\r\n};\r\nexport const PrevButton = ({ onClick }) => {\r\n\treturn (\r\n\t\t<button className=\"spring-btn spring-btn-rounded\" onClick={onClick}>\r\n\t\t\t<svg\r\n\t\t\t\tx=\"0px\"\r\n\t\t\t\tfill=\"white\"\r\n\t\t\t\ty=\"0px\"\r\n\t\t\t\twidth=\"20px\"\r\n\t\t\t\theight=\"20px\"\r\n\t\t\t\tviewBox=\"0 0 306 306\"\r\n\t\t\t\tstyle={{ transform: 'rotate(180deg)' }}\r\n\t\t\t>\r\n\t\t\t\t<g id=\"chevron-right\">\r\n\t\t\t\t\t<polygon points=\"94.35,0 58.65,35.7 175.95,153 58.65,270.3 94.35,306 247.35,153\" />\r\n\t\t\t\t</g>\r\n\t\t\t</svg>\r\n\t\t</button>\r\n\t);\r\n};","import SpringCalendar from './SpringCalendar'\n\nexport default SpringCalendar;","import React, { useEffect, useState } from 'react';\r\nimport './style.scss';\r\nimport Month from './Month';\r\nimport useCalendar from './useCalendar';\r\nimport Months from './Months';\r\nimport Day from './Day';\r\nimport Week from './Week';\r\nimport { CalendarProvider } from './CalendarContext';\r\n\r\nimport { NextButton, PrevButton } from './buttons';\r\nconst SpringCalendar = ({ locale, events, color ,defaultType}) => {\r\nconst colors=[\"#004D40\", \"#00695C\", \"#2e003e\", \"#3d2352\", \"#05386B\", \"#379683\", \"#022140\", \"#265077\", \"#0c0023\", \"#190061\", \"#38003c\", \"#e90052\", \"#330136\", \"#5E1742\", \"#191226\", \"#F2355B\", \"#702C8E\", \"#ED1651\", \"#2A4C59\", \"#A62D43\", \"#103754\", \"#D53D13\", \"#332851\", \"#CA3074\", \"#2D4057\", \"#4097AA\", \"#214D72\", \"#2C7695\", \"#071E22\", \"#EE2E31\", \"#434858\", \"#FC6453\", \"#651e3e\", \"#851e3e\", \"#0072ff\", \"#00c6ff\", \"#34495e\", \"#41b883\", \"#2b2d5c\", \"#3465d8\", \"#323E40\", \"#D97D0D\", \"#1D1D2C\", \"#E40C2B\", \"#1D1D2C\", \"#C3002F\", \"#306073\", \"#F2385A\", \"#0f256e\", \"#01a168\", \"#05004E\", \"#fd5f00\", \"#3e1063\", \"#401372\", \"#2F2440\", \"#BA0F30\"]\r\nlet coloredEvents=events.map(event=>{\r\n\tevent.color=event.color?event.color:colors[Math.round(Math.random()*56)-1];\r\n\treturn event;\r\n  })\r\n\tconst { selectedDate, changeView, gotoNext, gotoPrev } = useCalendar('2020', locale, coloredEvents,defaultType);\r\n\tconst [mainContent, setMainContent] = useState('day');\r\n\tuseEffect(() => {\r\n\t\tcolor\r\n\t\t\t? document.documentElement.style.setProperty('--primary', color)\r\n\t\t\t: document.documentElement.style.setProperty('--primary', '#5118ac');\r\n\t}, [color]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetMainContent(selectedDate.type);\r\n\t}, [selectedDate]);\r\n\r\n\tconst DYNAMIC_CONTENT = {\r\n\t\tyear: <Months months={selectedDate.months ? selectedDate.months : []} />,\r\n\t\tmonth: <Month extended month={selectedDate.month ? selectedDate.month : null} />,\r\n\tweek:<Week  week={selectedDate.week ? selectedDate.week : null} />,\r\n\t\tday: <Day day={selectedDate} />,\r\n\t};\r\n\t/***\r\n\t * * functions\r\n\t */\r\n\tconst selectMonth = month => {\r\n\t\tchangeView('month', month.fullLabel, false);\r\n\t};\r\n\r\n\t/**** */\r\n\tconst selectDay = day => {\r\n\t\tchangeView('day', day.label, false);\r\n\t};\r\n\t/**\r\n\t * JSX template\r\n\t */\r\n\treturn (\r\n\t\t<CalendarProvider value={{ selectMonth, selectDay }}>\r\n\t\t\t<div className=\"sc-wrapper\">\r\n\t\t\t\t<div className=\"sc-year-wrapper\">\r\n\t\t\t\t\t<div className={`sc-year ${selectedDate.type !== 'year' ? 'sc-month-year' : ''}`}>\r\n\t\t\t\t\t\t<PrevButton onClick={() => gotoPrev()} />\r\n\t\t\t\t\t\t<h2>{selectedDate.value}</h2>\r\n\t\t\t\t\t\t<NextButton onClick={() => gotoNext()} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"sc-toggle\">\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tonClick={() => changeView('day', selectedDate.value, false, true)}\r\n\t\t\t\t\t\t\tclassName={`spring-button ${selectedDate.type === 'day' ? 'spring-button-active' : ''}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tDay\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t <div\r\n\t\t\t\t\t\tonClick={() => changeView('week',selectedDate.value,false,true)}\r\n\t\t\t\t\t\tclassName={`spring-button ${selectedDate.type === 'week' ? 'spring-button-active' : ''}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tWeek\r\n\t\t\t\t\t</div> \r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tonClick={() => changeView('month', selectedDate.value, false, true)}\r\n\t\t\t\t\t\t\tclassName={`spring-button ${selectedDate.type === 'month' ? 'spring-button-active' : ''}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tMonth\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tonClick={() => changeView('year', selectedDate.value, false, true)}\r\n\t\t\t\t\t\t\tclassName={`spring-button ${selectedDate.type === 'year' ? 'spring-button-active' : ''}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tYear\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"spring-main-content\">{DYNAMIC_CONTENT[mainContent]}</div>\r\n\t\t\t</div>\r\n\t\t</CalendarProvider>\r\n\t);\r\n};\r\n\r\nexport default SpringCalendar;\r\n","import React from 'react';\r\nimport SpringCalendar from '../lib';\r\n\r\nlet events= [\r\n    {\r\n      title: \"Event 1\",\r\n      startDate: \"2020-05-22 08:00\",\r\n      endDate: \"2020-05-22 12:00\"\r\n    },\r\n    {\r\n      title: \"Event 2\",\r\n      startDate: \"2020-05-22 09:00\",\r\n      endDate: \"2020-05-22 12:00\"\r\n    },\r\n    {\r\n      title: \"Event 3\",\r\n      startDate: \"2020-05-22 12:00\",\r\n      endDate: \"2020-05-22 16:00\"\r\n    },\r\n    {\r\n      title: \"Event 4\",\r\n      startDate: \"2020-05-22 09:00\",\r\n      endDate: \"2020-05-22 10:00\"\r\n    },\r\n    {\r\n      title: \"Event 5\",\r\n      startDate: \"2020-05-22 09:00\",\r\n      endDate: \"2020-05-22 14:00\"\r\n    },\r\n    {\r\n      title: \"Event 6\",\r\n      startDate: \"2020-05-22 08:00\",\r\n      endDate: \"2020-05-22 10:00\"\r\n    },\r\n    {\r\n      title: \"Event 7\",\r\n      startDate: \"2020-05-22 06:00\",\r\n      endDate: \"2020-05-22 10:00\"\r\n    },\r\n    {\r\n      title: \"Event 8\",\r\n      startDate: \"2020-05-22 18:00\",\r\n      endDate: \"2020-05-22 22:00\"\r\n    },\r\n    {\r\n      title: \"Event 9\",\r\n      startDate: \"2020-05-22 18:00\",\r\n      endDate: \"2020-05-22 20:00\"\r\n    },\r\n    {\r\n      title: \"Event 10\",\r\n      startDate: \"2020-05-18 09:00\",\r\n      endDate: \"2020-05-18 20:50\"\r\n    }\r\n    ,\r\n    {\r\n      title: \"Event 11\",\r\n      startDate: \"2020-05-19 09:00\",\r\n      endDate: \"2020-05-19 20:30\"\r\n    }\r\n     ,\r\n    {\r\n      title: \"Event 12\",\r\n      startDate: \"2020-05-22 09:00\",\r\n      endDate: \"2020-05-22 12:30\"\r\n    }\r\n  ]\r\n\r\nlet color= (Math.random()*1000000).toFixed()\r\n// const App =()=> <SpringCalendar locale=\"ar-ma\" events={events} color={`#${color}`} />;\r\nconst App =()=> <SpringCalendar locale=\"en\" events={events} color=\"#5118ac\" defaultType=\"year\"/>;\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './module';\nReactDOM.render( <App/>, document.getElementById('root') );"],"sourceRoot":""}